
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Allow signed-in users to create email jobs for the Trigger Email extension.
    match /mail/{id} {
      allow create: if request.auth != null;
      allow read, update, delete: if false; // Lock down read/update/delete
    }

    // Users can read/write their own user document.
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }
    
    // Invitations can be read if they are pending.
    match /invitations/{inviteId} {
      allow read: if resource.data.status == 'pending';
      allow create, update, delete: if request.auth != null; // Allow creation by logged-in users (admins)
    }

    // Community data can be read by any authenticated user who is a member.
    // Writes are restricted to admins/owners (this logic would be in your backend/functions).
    match /communities/{communityId}/{document=**} {
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.memberships.hasAny([communityId]);
      allow write: if request.auth != null && (
        get(/databases/$(database)/documents/communities/$(communityId)/members/$(request.auth.uid)).data.role == 'admin' ||
        get(/databases/$(database)/documents/communities/$(communityId)/members/$(request.auth.uid)).data.role == 'owner'
      );
    }
  }
}
