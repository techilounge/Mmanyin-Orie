rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isMemberOfCommunity(communityId) {
      return request.auth != null && exists(/databases/$(database)/documents/communities/$(communityId)/members/$(request.auth.uid));
    }

    function isCommunityAdmin(communityId) {
      let memberRole = get(/databases/$(database)/documents/communities/$(communityId)/members/$(request.auth.uid)).data.role;
      return request.auth != null && memberRole in ['owner', 'admin'];
    }

    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }

    match /communities/{communityId} {
      allow read: if isMemberOfCommunity(communityId);
    }
    
    match /communities/{communityId}/families/{familyId} {
        allow read: if isMemberOfCommunity(communityId);
        allow create, update, delete: if isCommunityAdmin(communityId);
    }

    match /communities/{communityId}/contributions/{contributionId} {
        allow read: if isMemberOfCommunity(communityId);
        allow create, update, delete: if isCommunityAdmin(communityId);
    }

    match /communities/{communityId}/members/{uid} {
      allow read: if isMemberOfCommunity(communityId);
      allow create: if request.auth != null;
      allow update: if (request.auth != null && request.auth.uid == uid) || isCommunityAdmin(communityId);
      allow delete: if isCommunityAdmin(communityId);
    }

    match /invitations/{inviteId} {
      allow read: if resource.data.status == 'pending'
                  || (request.auth != null
                      && request.auth.token.email == resource.data.email)
                  || isCommunityAdmin(resource.data.communityId);
      
      allow update: if (request.auth != null && request.auth.token.email == resource.data.email) 
                    || isCommunityAdmin(resource.data.communityId);

      allow create: if request.auth != null;
      allow delete: if isCommunityAdmin(resource.data.communityId);
    }

    match /mail/{docId} {
      allow read: if false;
      allow write: if request.auth != null;
    }
  }
}
