
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }
    function isOwner(communityId) {
      return get(/databases/$(database)/documents/communities/$(communityId)).data.ownerUid == request.auth.uid;
    }
    function isAdmin(communityId) {
      let member = get(/databases/$(database)/documents/communities/$(communityId)/members/$(request.auth.uid)).data;
      return member.role in ['owner', 'admin'];
    }
    function isMember(communityId) {
      return exists(/databases/$(database)/documents/communities/$(communityId)/members/$(request.auth.uid));
    }
    function isSelf(uid) {
      return request.auth.uid == uid;
    }

    match /users/{userId} {
      allow read, write: if isAuth() && isSelf(userId);
    }
    
    match /invitations/{inviteId} {
      allow read: if isAuth(); // Admins can read all, users can read their own
      allow create: if isAuth() && isAdmin(request.resource.data.communityId);
      allow update: if isAuth() && 
                      (isAdmin(resource.data.communityId) || 
                       (isSelf(request.resource.data.acceptedByUid) && resource.data.status == 'pending'));
    }

    match /communities/{communityId} {
      allow read: if isAuth() && isMember(communityId);
      allow create: if isAuth() && request.resource.data.ownerUid == request.auth.uid;
      allow update: if isAuth() && (isOwner(communityId) || isAdmin(communityId));
      
      match /members/{memberId} {
        allow read: if isAuth() && isMember(communityId);
        allow create: if isAuth() && isAdmin(communityId);
        // Allow update for admins, or for a user accepting an invite
        allow update: if isAuth() && (
          isAdmin(communityId) || 
          (isSelf(request.resource.data.uid) && 
           get(/databases/$(database)/documents/invitations/$(request.resource.data.inviteId)).data.code == request.resource.data.inviteCode)
        );
        allow delete: if isAuth() && isAdmin(communityId);
      }
      
      match /families/{familyId} {
        allow read: if isAuth() && isMember(communityId);
        allow create, update, delete: if isAuth() && isAdmin(communityId);
      }
      
      match /contributions/{contributionId} {
        allow read: if isAuth() && isMember(communityId);
        allow create, update, delete: if isAuth() && isAdmin(communityId);
      }
    }
  }
}
