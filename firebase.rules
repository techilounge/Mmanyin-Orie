rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Default to locked down
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow signed-in users to create email jobs for the Trigger Email extension.
    match /mail/{id} {
      allow read: if false;
      allow create: if request.auth != null;
    }
    
    // Users can read/write their own user document
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }
    
    // Public read for legal pages if you ever store them here
    match /legal/{docId} {
      allow get: if true;
    }

    // Rules for communities
    match /communities/{communityId} {
      allow get: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.memberships.hasAny([communityId]);
      allow create: if request.auth != null;
      allow update: if request.auth != null && get(/databases/$(database)/documents/communities/$(communityId)).data.ownerUid == request.auth.uid;
    }

    // Rules for members within a community
    match /communities/{communityId}/members/{memberId} {
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.memberships.hasAny([communityId]);
      allow create, update: if request.auth != null && get(/databases/$(database)/documents/communities/$(communityId)).data.ownerUid == request.auth.uid;
      allow delete: if request.auth != null && get(/databases/$(database)/documents/communities/$(communityId)).data.ownerUid == request.auth.uid;
    }
    
    // Rules for other subcollections can be added here (e.g., families, contributions)
    match /communities/{communityId}/{subcollection}/{docId} {
       allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.memberships.hasAny([communityId]);
       allow write: if request.auth != null && get(/databases/$(database)/documents/communities/$(communityId)).data.ownerUid == request.auth.uid;
    }
    
    // Invitations
    match /invitations/{inviteId} {
        allow get: if true; // Publicly readable to allow accepting
        allow create: if request.auth != null; // Only auth users can create
        allow update: if request.auth != null; // Only auth users can update (to accept)
    }
  }
}
